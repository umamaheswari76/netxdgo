limit -> number of records for that limit function
            db.getCollection("posts").find().limit(10)

count -> provides the total number of records
            db.getCollection("posts").find().count()

fetching only some fields after the find
            db.getCollection("posts")
            .find({},{body:1})
            .limit(20)
            .sort({"body":1})

$project  -> it passes along the documents with only specified fields,
             to the next stage in the pipeline

             db.getCollection("transactions")
            .aggregate(
            [{
                $project:{
                    _id: null,
                    account_id:1,
                    totalTransactions: {
                        $sum:"$transactions.amount"
                    }
                }
            }]
            )         

go through - have examples for all

$match  -> used to retrieve the documents that match the secified condition
$group  ->
$sort
$project

operators  -> https://www.mongodb.com/docs/manual/meta/aggregation-quick-reference/#std-label-aggregation-expressions
